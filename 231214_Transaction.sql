/* 20231214
트랜잭션
    - 데이터베이스의 상태를 변환시키는 하나의 논리적인 기능을 수행하기 위한 논리적인 작업의 단위
      ex) 홍길동이 이순신에게 100만원을 이체하는 경우
          1. 홍길동의 계좌에서 잔액을 100만원 감소시킨다. - UPDATE 작업
          2. 이순신의 계좌에서 잔액을 100만원 증가시킨다. - UPDATE 작업
          3. 홍길동의 최근 이체내역에 이순신에게 100만원 송금한 내용을 추가한다. - INSERT 작업
          
          * 논리적인 작업의 단위(그룹, 묶음, 연산들) = 감소 UPDATE + 증가 UPDATE + 추가 INSERT
          * 논리적인 작업의 단위를 구성하는 모든 SQL 명령이 성공적으로 완료되어야 하나의 작업 단위가
            완료된 것이고, 이 경우 데이터베이스에 반영시킴

트랜잭션 관련 명령어
    COMMIT
        - 논리적인 작업 단위를 구성하는 모든 작업이 성공적으로 완료되었을 때,
          데이터베이스의 트랜잭션 관리자에게
          해당 작업 단위 내에서 실행했던 처리 결과를 영구적으로 데이터베이스에 반영시키게 함
    ROLLBACK
        - 논리적인 작업 단위를 구성하는 작업 줄에서 오류가 발생했을 때,
          데이터베이스의 트랜잭션 관리자에게
          해당 작업 단위 내에서 실행했던 처리 결과의 데이터베이스 반영을 취소시키게 함
          
    트랜잭션의 시작과 종료
        1. 트랜잭션의 시작
          - 첫번째 DML 명령문이 실행될 때 새로운 트랜잭션이 시작됨
          - COMMIT, ROLLBACK 명령 실행 시 기존 트랜잭션 종료 후 새로운 트랜잭션이 시작됨
        2. 트랜잭션의 종료
          - COMMIT, ROLLBACK 명령 실행 시 기존 트랜잭션이 종료됨
          - DBMS에 시스템 장애가 발생할 때 AUTO-ROLLBACK이 실행되면서 트랜잭션이 종료됨
*/

------------------------------------------------------------ 트랜잭션1 시작
UPDATE ACCOUNTS
SET
    DEPOSIT = DEPOSIT - 1000000
WHERE
    NO = 10;                       -- 트랜잭션1의 연산
    
UPDATE ACCOUNTS
SET
    DEPOSIT = DEPOSIT + 1000000
WHERE
    NO = 20;                       -- 트랜잭션1의 연산

INSERT INTO HISTORIES
VALUES (10, 20, 1000000, SYSDATE); -- 트랜잭션1의 연산

COMMIT;                            -- 트랜잭션1의 모든 연산이 오류없이 실행되었기 때문에
                                   -- 트랜잭션관리자에게 트랜잭션1의 처리결과를 영구적으로 데이터베이스에 반영시키도록 함
------------------------------------------------------------ 트랜잭션1 종료
------------------------------------------------------------ 트랜잭션2 시작
UPDATE ACCOUNTS
SET
    DEPOSIT = DEPOSIT - 50000      -- 트랜잭션2의 연산
WHERE
    NO = 70;

UPDATE ACCOUNTS
SET
    DEPOSIT = DEPOSIT + 50000      -- 트랜잭션2의 연산
WHERE
    NO = 120;
    
INSERT INTO HISTORIES
VALUES (70, 120, 50000);           -- 트랜잭션2의 연산

ROLLBACK;                          -- 트랜잭션2의 INSERT 작업중 오류가 발생함
                                   -- 트랜잭션관리자에게 트랜잭션2의 처리결과를 모두 취소시키도록 함
------------------------------------------------------------ 트랜잭션2 종료
------------------------------------------------------------ 트랜잭션3 시작













